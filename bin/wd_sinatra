#!/usr/bin/env ruby
require "rubygems"
require "thor/group"
require "active_support/inflector"

class WdSinatra < Thor::Group
  include Thor::Actions

  # Define arguments and options
  # argument :type, :type => :string, :desc => "The type to generate, app by default"
  argument :name, :type => :string, :desc => "The name of the app to generate"
  class_option :test_framework, :default => :test_unit

  def self.source_root
    File.expand_path(File.join('..', 'templates'), File.dirname(__FILE__))
  end

  def create_lib_directory
    directory "lib", "#{name}/lib"
  end

  def create_config_directory
    directory "config", "#{name}/config"
  end

  def create_bin_directory
    directory "bin", "#{name}/bin"
    chmod "#{name}/bin/console", 0755
  end

  def create_public_directory
    directory "public", "#{name}/public"
  end

  def create_api_directory
    directory "api", "#{name}/api"
  end

  def create_test_directory
    directory "test", "#{name}/test"
  end

  def create_files
    %W{Rakefile Gemfile config.ru Guardfile Thorfile}.each do |filename|
      copy_file filename, "#{name}/#{filename}"
    end
  end

  def set_app_name
    template "config/middleware.rb", "#{name}/config/middleware.rb"
    template "config/sinatra_config.rb", "#{name}/config/sinatra_config.rb"
    template "api/hello_world.rb", "#{name}/api/hello_world.rb"
    template "config.ru", "#{name}/config.ru"
    template "Thorfile", "#{name}/Thorfile"
  end

  protected
  def name_const
    @name_const ||= name.gsub(/\W/, '_').squeeze('_').camelize
  end
end

WdSinatra.start
